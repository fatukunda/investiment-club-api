{"version":3,"sources":["../../../src/modules/user-management/userController.js"],"names":["util","Util","UserController","req","res","userInfo","body","userService","createUser","createdUser","setSuccess","send","errorMessage","setError","loginInfo","loginUser","user","error","profileInfo","acceptedEditOptions","receivedOptions","Object","keys","isUpdateOption","every","option","includes","forEach","save"],"mappings":";;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;AAJA;;AACA;AAKA,IAAMA,IAAI,GAAG,IAAIC,iBAAJ,EAAb;;IAEqBC,c;;;;;;;;;+BACKC,G,EAAKC,G;;;;;;AACrBC,cAAAA,Q,GAAWF,GAAG,CAACG,I;;;mDAEOC,wBAAYC,UAAZ,CAAuBH,QAAvB,C;;;AAApBI,cAAAA,W;AACNT,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAqB,eAArB,EAAsCD,WAAtC;+CACOT,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAEDQ,cAAAA,Y,GAAe,sD;AACrBZ,cAAAA,IAAI,CAACa,QAAL,CAAc,GAAd,EAAmBD,YAAnB;+CACOZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;8BAIYD,G,EAAKC,G;;;;;;AACpBU,cAAAA,S,GAAYX,GAAG,CAACG,I;;mDAEHC,wBAAYQ,SAAZ,CAAsBD,SAAtB,C;;;AAAbE,cAAAA,I;;mBACFA,IAAI,CAACC,K;;;;;AACPjB,cAAAA,IAAI,CAACa,QAAL,CAAc,GAAd,EAAmBG,IAAI,CAACC,KAAxB;gDACOjB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;AAETJ,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAqB,yBAArB,EAAgDM,IAAhD;gDACOhB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;oCAGoBD,G,EAAKC,G;;;;;;;mDACbD,GAAG,CAACa,I;;;AAAjBA,cAAAA,I;AACNhB,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAqB,cAArB,EAAqCM,IAArC;gDACOhB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;sCAGsBD,G,EAAKC,G;;;;;;AAC5Bc,cAAAA,W,GAAcf,GAAG,CAACG,I;AAChBU,cAAAA,I,GAASb,G,CAATa,I;AACFG,cAAAA,mB,GAAsB,CAAC,WAAD,EAAc,UAAd,EAA0B,KAA1B,EAAiC,QAAjC,EAA2C,aAA3C,EAA0D,SAA1D,C;AACtBC,cAAAA,e,GAAkBC,MAAM,CAACC,IAAP,CAAYJ,WAAZ,C;AAClBK,cAAAA,c,GAAiBH,eAAe,CAACI,KAAhB,CAAsB,UAACC,MAAD;AAAA,uBAAYN,mBAAmB,CAACO,QAApB,CAA6BD,MAA7B,CAAZ;AAAA,eAAtB,C;;kBAClBF,c;;;;;AACHvB,cAAAA,IAAI,CAACa,QAAL,CAAc,GAAd,EAAmB,gDAAnB;gDACOb,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;AAGP;AACAgB,cAAAA,eAAe,CAACO,OAAhB,CAAwB,UAACF,MAAD;AAAA,uBAAaT,IAAI,CAACS,MAAD,CAAJ,GAAeP,WAAW,CAACO,MAAD,CAAvC;AAAA,eAAxB;;mDACMT,IAAI,CAACY,IAAL,E;;;AACN5B,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAqB,oCAArB,EAA2DM,IAA3D;gDACOhB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAEDQ,cAAAA,Y,GAAe,8C;AACrBZ,cAAAA,IAAI,CAACa,QAAL,CAAc,GAAd,EAAmBD,YAAnB;gDACOZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C","sourcesContent":["/* eslint-disable no-tabs */\n/* eslint-disable no-mixed-spaces-and-tabs */\nimport Util from '../../utils/utils';\nimport userService from './userService';\nimport { profileValidator, userRegistrationValidator } from '../../utils/validator';\n\nconst util = new Util();\n\nexport default class UserController {\n  static async createUser(req, res) {\n    const userInfo = req.body;\n    try {\n      const createdUser = await userService.createUser(userInfo);\n      util.setSuccess(201, 'User created!', createdUser);\n      return util.send(res);\n    } catch (error) {\n      const errorMessage = userRegistrationValidator(error);\n      util.setError(400, errorMessage);\n      return util.send(res);\n    }\n  }\n\n  static async loginUser(req, res) {\n    const loginInfo = req.body;\n\n    const user = await userService.loginUser(loginInfo);\n    if (user.error) {\n      util.setError(400, user.error);\n      return util.send(res);\n    }\n    util.setSuccess(200, 'Logged in successfully!', user);\n    return util.send(res);\n  }\n\n  static async viewUserProfile(req, res) {\n    const user = await req.user;\n    util.setSuccess(200, 'User Profile', user);\n    return util.send(res);\n  }\n\n  static async createUserProfile(req, res) {\n    const profileInfo = req.body;\n    const { user } = req;\n    const acceptedEditOptions = ['firstName', 'lastName', 'dob', 'gender', 'phoneNumber', 'address'];\n    const receivedOptions = Object.keys(profileInfo);\n    const isUpdateOption = receivedOptions.every((option) => acceptedEditOptions.includes(option));\n    if (!isUpdateOption) {\n      util.setError(400, 'One of the fields is not a valid update field.');\n      return util.send(res);\n    }\n    try {\n      // eslint-disable-next-line no-return-assign\n      receivedOptions.forEach((option) => (user[option] = profileInfo[option]));\n      await user.save();\n      util.setSuccess(200, 'User profile updated successfully!', user);\n      return util.send(res);\n    } catch (error) {\n      const errorMessage = profileValidator(error);\n      util.setError(400, errorMessage);\n      return util.send(res);\n    }\n  }\n}\n"],"file":"userController.js"}