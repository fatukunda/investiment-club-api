{"version":3,"sources":["../../../src/modules/user-management/userController.js"],"names":["util","Util","UserController","req","res","userInfo","body","userService","createUser","createdUser","setSuccess","send","errorMessage","errors","email","message","kind","password","username","setError","loginInfo","loginUser","user","error"],"mappings":";;;;;;;;;;;;;;;AAEA;;AACA;;AAHA;;AACA;AAIA,IAAMA,IAAI,GAAG,IAAIC,iBAAJ,EAAb;;IAEqBC,c;;;;;;;;;+BACKC,G,EAAKC,G;;;;;;AACrBC,cAAAA,Q,GAAWF,GAAG,CAACG,I;;;mDAEOC,wBAAYC,UAAZ,CAAuBH,QAAvB,C;;;AAApBI,cAAAA,W;AACNT,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAqB,eAArB,EAAsCD,WAAtC;+CACOT,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;AAEHQ,cAAAA,Y,GAAe,E;;AACnB,kBAAI,YAAMC,MAAN,CAAaC,KAAjB,EAAwB;AACtBF,gBAAAA,YAAY,GAAG,YAAMC,MAAN,CAAaC,KAAb,CAAmBC,OAAlC;AACD;;AACD,kBAAI,YAAMF,MAAN,CAAaC,KAAb,IAAsB,YAAMD,MAAN,CAAaC,KAAb,CAAmBE,IAAnB,KAA4B,QAAtD,EAAgE;AAC9DJ,gBAAAA,YAAY,GAAG,YAAMC,MAAN,CAAaC,KAAb,CAAmBC,OAAlC;AACD;;AACD,kBAAI,YAAMF,MAAN,CAAaC,KAAb,IAAsB,YAAMD,MAAN,CAAaC,KAAb,CAAmBE,IAAnB,KAA4B,UAAtD,EAAkE;AAChEJ,gBAAAA,YAAY,GAAG,YAAMC,MAAN,CAAaC,KAAb,CAAmBC,OAAlC;AACD;;AACD,kBAAI,YAAMF,MAAN,CAAaI,QAAjB,EAA2B;AACzBL,gBAAAA,YAAY,GAAG,YAAMC,MAAN,CAAaI,QAAb,CAAsBF,OAArC;AACD;;AACD,kBAAI,YAAMF,MAAN,CAAaK,QAAb,IAAyB,YAAML,MAAN,CAAaK,QAAb,CAAsBF,IAAtB,KAA+B,QAA5D,EAAsE;AACpEJ,gBAAAA,YAAY,GAAG,YAAMC,MAAN,CAAaK,QAAb,CAAsBH,OAArC;AACD;;AACD,kBAAI,YAAMF,MAAN,CAAaK,QAAb,IAAyB,YAAML,MAAN,CAAaK,QAAb,CAAsBF,IAAtB,KAA+B,UAA5D,EAAwE;AACtEJ,gBAAAA,YAAY,GAAG,YAAMC,MAAN,CAAaK,QAAb,CAAsBH,OAArC;AACD;;AACDf,cAAAA,IAAI,CAACmB,QAAL,CAAc,GAAd,EAAmBP,YAAnB;+CACOZ,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;;;;;;;;;8BAIYD,G,EAAKC,G;;;;;;AACpBgB,cAAAA,S,GAAYjB,GAAG,CAACG,I;;mDAEHC,wBAAYc,SAAZ,CAAsBD,SAAtB,C;;;AAAbE,cAAAA,I;;mBACFA,IAAI,CAACC,K;;;;;AACPvB,cAAAA,IAAI,CAACmB,QAAL,CAAc,GAAd,EAAmBG,IAAI,CAACC,KAAxB;gDACOvB,IAAI,CAACW,IAAL,CAAUP,GAAV,C;;;AAETJ,cAAAA,IAAI,CAACU,UAAL,CAAgB,GAAhB,EAAqB,yBAArB,EAAgDY,IAAhD;gDACOtB,IAAI,CAACW,IAAL,CAAUP,GAAV,C","sourcesContent":["/* eslint-disable no-tabs */\n/* eslint-disable no-mixed-spaces-and-tabs */\nimport Util from '../../utils/utils';\nimport userService from './userService';\n\nconst util = new Util();\n\nexport default class UserController {\n  static async createUser(req, res) {\n    const userInfo = req.body;\n    try {\n      const createdUser = await userService.createUser(userInfo);\n      util.setSuccess(201, 'User created!', createdUser);\n      return util.send(res);\n    } catch (error) {\n      let errorMessage = '';\n      if (error.errors.email) {\n        errorMessage = error.errors.email.message;\n      }\n      if (error.errors.email && error.errors.email.kind === 'unique') {\n        errorMessage = error.errors.email.message;\n      }\n      if (error.errors.email && error.errors.email.kind === 'required') {\n        errorMessage = error.errors.email.message;\n      }\n      if (error.errors.password) {\n        errorMessage = error.errors.password.message;\n      }\n      if (error.errors.username && error.errors.username.kind === 'unique') {\n        errorMessage = error.errors.username.message;\n      }\n      if (error.errors.username && error.errors.username.kind === 'required') {\n        errorMessage = error.errors.username.message;\n      }\n      util.setError(400, errorMessage);\n      return util.send(res);\n    }\n  }\n\n  static async loginUser(req, res) {\n    const loginInfo = req.body;\n\n    const user = await userService.loginUser(loginInfo);\n    if (user.error) {\n      util.setError(400, user.error);\n      return util.send(res);\n    }\n    util.setSuccess(200, 'Logged in successfully!', user);\n    return util.send(res);\n  }\n}\n"],"file":"userController.js"}