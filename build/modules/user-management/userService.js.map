{"version":3,"sources":["../../../src/modules/user-management/userService.js"],"names":["UserService","userInfo","user","User","save","generateAuthToken","token","loginInfo","username","password","findByCredentials","error","userId","avatarUrl","findById","avatar"],"mappings":";;;;;;;;;;;;;;;AACA;;AADA;IAGMA,W;;;;;;;;;;AACJ;;;;;+BAKwBC,Q;;;;;;;AAEdC,cAAAA,I,GAAO,IAAIC,gBAAJ,CAASF,QAAT,C;;mDACPC,IAAI,CAACE,IAAL,E;;;;mDACcF,IAAI,CAACG,iBAAL,E;;;AAAdC,cAAAA,K;+CACC;AAAEJ,gBAAAA,IAAI,EAAJA,IAAF;AAAQI,gBAAAA,KAAK,EAALA;AAAR,e;;;;;;;;;;;;;;AAMX;;;;;;;;8BAKuBC,S;;;;;;AACbC,cAAAA,Q,GAAuBD,S,CAAvBC,Q,EAAUC,Q,GAAaF,S,CAAbE,Q;;;mDAEGN,iBAAKO,iBAAL,CAAuBF,QAAvB,EAAiCC,QAAjC,C;;;AAAbP,cAAAA,I;;mBACFA,IAAI,CAACS,K;;;;;gDACAT,I;;;;mDAEWA,IAAI,CAACG,iBAAL,E;;;AAAdC,cAAAA,K;gDACC;AAAEJ,gBAAAA,IAAI,EAAJA,IAAF;AAAQI,gBAAAA,KAAK,EAALA;AAAR,e;;;;;;;;;;;;;MAMX;;;;iCAC0BM,M,EAAQC,S;;;;;;;;mDAEXV,iBAAKW,QAAL,CAAcF,MAAd,C;;;AAAbV,cAAAA,I;;mBACFA,I;;;;;AACFA,cAAAA,IAAI,CAACa,MAAL,GAAcF,SAAd;;mDACMX,IAAI,CAACE,IAAL,E;;;gDACCF,IAAI,CAACa,M;;;;;;;;;;;;;;;;;;;;;;eAQLf,W","sourcesContent":["/* eslint-disable no-useless-catch */\nimport User from './User';\n\nclass UserService {\n  /**\n     * @param  {object} userInfo\n     * @returns {Promise}\n     * @description Creates a new user and user token and returns both\n     */\n  static async createUser(userInfo) {\n    try {\n      const user = new User(userInfo);\n      await user.save();\n      const token = await user.generateAuthToken();\n      return { user, token };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /**\n     * @param  {object} loginInfo\n     * @returns {Promise}\n     * @description Takes in username and password and returns a user and the auth token.\n     */\n  static async loginUser(loginInfo) {\n    const { username, password } = loginInfo;\n    try {\n      const user = await User.findByCredentials(username, password);\n      if (user.error) {\n        return user;\n      }\n      const token = await user.generateAuthToken();\n      return { user, token };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  static async uploadAvatar(userId, avatarUrl) {\n    try {\n      const user = await User.findById(userId);\n      if (user) {\n        user.avatar = avatarUrl;\n        await user.save();\n        return user.avatar;\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\nexport default UserService;\n"],"file":"userService.js"}